name: "c3d_big_input"

# ----- video/label input -----
# ----- for training
# layer {
#   name: "data"
#   type: "HDF5Data"
#   top: "data"
#   #top: "label"
#   #mean_file: "/scratch/cl2840/caffe-installation/video-caffe/ucf101_train_mean.binaryproto"
#   hdf5_data_param {
#     source: "/scratch/cl2840/imageNet/uadetrac_frm_hdf5path.txt"
#     #batch_size: 10
#     batch_size: 1
#     #new_height: 128
#     #new_width: 171
#     #new_length: 16
#     #shuffle: true
#   }
#   include {
#     phase: TRAIN
#   }
# #  transform_param {
#  #   crop_size: 112
#  #   mirror: true
#  # }
# }


# ----- for validation
#layer {
#  name: "data"
#  type: "VideoData"
#  top: "data"
#  top: "label"
#  video_data_param {
#    source: "/scratch/cl2840/imageNet/uadetrac_frm_hdf5path.txt" #"ucf_siamiese_test1.txt"
#    batch_size: 5
#    new_height: 128
#    new_width: 171
#    new_length: 16
#    shuffle: true
#  }
#  include {
#    phase: TEST
#    stage: "test-on-train"
#  }
#  transform_param {
#    crop_size: 112
#    mirror: false
#    mean_file: "/scratch/cl2840/caffe-installation/video-caffe/ucf101_train_mean.binaryproto"
#  }
#}

# ----- for testing
layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  hdf5_data_param {
    source: "uadetrac_frm_hdf5path.txt"
    #source: "/scratch/cl2840/imageNet/uadetrac_frm_hdf5path.test.txt"
    batch_size: 1
    #new_height: 128
    #new_width: 171
    #new_length: 16
    #shuffle: true
    #mean_file: "/scratch/cl2840/caffe-installation/video-caffe/ucf101_train_mean.binaryproto"
  }
#  include {
#    phase: TEST
#    stage: "test-on-val"
#  }
#  transform_param {
#    crop_size: 112
#    mirror: false
#  }
}

# ----- 1st group -----
layer {
  name: "conv1a"
  type: "NdConvolution"
  bottom: "data"
  top: "conv1a"
  param {
    name: "conv1a_w"
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    name:"conv1a_b"
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1a"
  type: "ReLU"
  bottom: "conv1a"
  top: "conv1a"
}
layer {
  name: "pool1"
  type: "NdPooling"
  bottom: "conv1a"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 1 dim: 2 dim: 2 }
    stride_shape { dim: 1 dim: 2 dim: 2 }
  }
}

# ----- 2nd group -----
layer {
  name: "conv2a"
  type: "NdConvolution"
  bottom: "pool1"
  top: "conv2a"
  param {
    name:"conv2a_w"
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    name:"conv2a_b"
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2a"
  type: "ReLU"
  bottom: "conv2a"
  top: "conv2a"
}
layer {
  name: "pool2"
  type: "NdPooling"
  bottom: "conv2a"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 3rd group -----
layer {
  name: "conv3a"
  type: "NdConvolution"
  bottom: "pool2"
  top: "conv3a"
  param {
    name:"conv3a_w"
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    name:"conv3a_b"
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu3a"
  type: "ReLU"
  bottom: "conv3a"
  top: "conv3a"
}
layer {
  name: "pool3"
  type: "NdPooling"
  bottom: "conv3a"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 4th group -----
layer {
  name: "conv4a"
  type: "NdConvolution"
  bottom: "pool3"
  top: "conv4a"
  param {
    name:"conv4a_w"
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    name:"conv4a_b"
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    #num_output: 512
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4a"
  type: "ReLU"
  bottom: "conv4a"
  top: "conv4a"
}
layer {
  name: "pool4"
  type: "NdPooling"
  bottom: "conv4a"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}

# ----- 5th group -----
layer {
  name: "conv5a"
  type: "NdConvolution"
  bottom: "pool4"
  top: "conv5a"
  param {
    name:"conv5a_w"
    lr_mult: 0.1
    decay_mult: 0.1
  }
  param {
    name:"conv5a_b"
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    #num_output: 512
    kernel_shape { dim: 3 dim: 3 dim: 3 }
    stride_shape { dim: 1 dim: 1 dim: 1 }
    pad_shape    { dim: 1 dim: 1 dim: 1 }
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5a"
  type: "ReLU"
  bottom: "conv5a"
  top: "conv5a"
}

layer {
  name: "pool5"
  type: "NdPooling"
  bottom: "conv5a"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_shape { dim: 2 dim: 2 dim: 2 }
    stride_shape { dim: 2 dim: 2 dim: 2 }
  }
}
